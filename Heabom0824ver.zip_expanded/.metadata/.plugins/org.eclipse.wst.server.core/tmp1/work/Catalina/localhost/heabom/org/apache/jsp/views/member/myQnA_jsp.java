/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-31 14:57:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.heabom.board.model.vo.Question;
import com.heabom.board.model.vo.Answer;
import java.util.ArrayList;

public final class myQnA_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.heabom.board.model.vo.Answer");
    _jspx_imports_classes.add("com.heabom.board.model.vo.Question");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Question> qlist = (ArrayList<Question>)request.getAttribute("quArr");
	// 질문번호, 질문내용, 질문날짜, 답변자, 답변여부, 답변내용, 답변일자, 답변자닉네임

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".yj_myQnA_area {\r\n");
      out.write("	border: 0px solid;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	width: 532px;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	margin-left: 817px;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border-radius: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".yj_myQnA_detail {\r\n");
      out.write("	height: auto;\r\n");
      out.write("	width: auto;\r\n");
      out.write("	border: 1px solid white;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	margin-left: 10px;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	width: 450px;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	color: black;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	background-color: #000;\r\n");
      out.write("	line-height: 30px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull.gr {\r\n");
      out.write("	background-color: lightgray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull.gr:after {\r\n");
      out.write("	content: \"\";\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	right: 30px;\r\n");
      out.write("	top: 65px;\r\n");
      out.write("	border-left: 20px solid transparent;\r\n");
      out.write("	border-right: 20px solid transparent;\r\n");
      out.write("	border-top: 20px solid lightgray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull.pk_complete {\r\n");
      out.write("	color: white;\r\n");
      out.write("	background-color: rgb(223, 188, 223);\r\n");
      out.write("	margin-bottom: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull.pk_complete:after {\r\n");
      out.write("	content: \"\";\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 30px;\r\n");
      out.write("	bottom: 100px;\r\n");
      out.write("	border-left: 20px solid transparent;\r\n");
      out.write("	border-right: 20px solid transparent;\r\n");
      out.write("	border-bottom: 20px solid rgb(223, 188, 223);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull.pk_complete {\r\n");
      out.write("	color: white;\r\n");
      out.write("	background-color: rgb(223, 188, 223);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text_limit {\r\n");
      out.write("	width: 400px;\r\n");
      out.write("	white-space: nowrap;\r\n");
      out.write("	overflow: hidden;\r\n");
      out.write("	text-overflow: ellipsis; /* 말줄임 적용 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text_limit a {\r\n");
      out.write("	color: blue;\r\n");
      out.write("	font-size: small;\r\n");
      out.write("	font-weight: bolder;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text_limit a:hover {\r\n");
      out.write("	color: yellowgreen;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".text_limit:hover {\r\n");
      out.write("	color: darkgray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull.pk_unComplete {\r\n");
      out.write("	color: white;\r\n");
      out.write("	background-color: rgb(223, 188, 223);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull.pk_unComplete:after {\r\n");
      out.write("	content: \"\";\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 30px;\r\n");
      out.write("	bottom: 65px;\r\n");
      out.write("	border-left: 20px solid transparent;\r\n");
      out.write("	border-right: 20px solid transparent;\r\n");
      out.write("	border-bottom: 20px solid rgb(223, 188, 223);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pull.pk_unComplete {\r\n");
      out.write("	color: white;\r\n");
      out.write("	background-color: rgb(223, 188, 223);\r\n");
      out.write("	margin-bottom: 0px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"yj_myQnA_area\" align=\"center\">\r\n");
      out.write("	    ");
 if(qlist.size() == 0) { 
      out.write("\r\n");
      out.write("			<div class=\"yj_myQnA_detail\">\r\n");
      out.write("				<div class=\"pull gr\">\r\n");
      out.write("					<div class=\"text_limit gr\">\r\n");
      out.write("						<strong>해봄은 고객의 소리를 기다립니다.</strong>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>        \r\n");
      out.write("       	");
 } else { 
      out.write("\r\n");
      out.write("        	");
 for(Question q : qlist) { 
      out.write("\r\n");
      out.write("				<div class=\"yj_myQnA_detail\">\r\n");
      out.write("					<div class=\"pull gr\">\r\n");
      out.write("						<div class=\"text_limit gr\">\r\n");
      out.write("							<strong>");
      out.print(q.getQuestionComment() );
      out.write("</strong>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				");
 if(q.getAnswerContent() == null) { 
      out.write("\r\n");
      out.write("					<!-- 답변 전 -->\r\n");
      out.write("					<div class=\"pull pk_unComplete\">\r\n");
      out.write("						<div class=\"text_limit\"><strong>관리자가 성실한 답변 작성중에 있습니다. 빠른시일내에 답변 드리겠습니다.</strong></div>\r\n");
      out.write("					</div>\r\n");
      out.write("				");
 } else { 
      out.write("\r\n");
      out.write("					<!-- 답변완료시 -->\r\n");
      out.write("						<div class=\"pull pk_complete\">\r\n");
      out.write("							<table border=\"0\">\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td width=\"60\">답변자 :</td>\r\n");
      out.write("									<td><strong>");
      out.print(q.getAnswerNickname() );
      out.write("</strong></td>\r\n");
      out.write("									<td width=\"20\"></td>\r\n");
      out.write("									<td width=\"70\">답변일자:</td>\r\n");
      out.write("									<td><strong>");
      out.print(q.getAnswerDate() );
      out.write("</strong></td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td colspan=\"5\" width=\"450\">\r\n");
      out.write("										<div class=\"text_limit\">\r\n");
      out.write("											<strong>");
      out.print(q.getAnswerContent() );
      out.write("</strong>\r\n");
      out.write("										</div>\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("							</table>\r\n");
      out.write("						</div>\r\n");
      out.write("					");
 } 
      out.write("	\r\n");
      out.write("				</div>    \r\n");
      out.write("			");
 } 
      out.write("        \r\n");
      out.write("		");
 } 
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
